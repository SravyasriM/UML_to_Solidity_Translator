pragma solidity 0.7.5;

//package ProjectEuler


/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By
 * starting with 1 and 2, the first 10 terms will be:
 *
 * <p>1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * <p>By considering the terms in the Fibonacci sequence whose values do not exceed four million,
 * find the sum of the even-valued terms.
 *
 * <p>Link: https://projecteuler.net/problem=2
 */

contract Problem02
{
	function solution1(int32 n) private returns(int32)
	{
			int32 sum = int32(0);
			int32 first = int32(1);
			int32 second = int32(2);
			while(second <= n)
			{
					if(second % 2 == 0)
					{
							sum += second;
					}
					int32 temp = int32(first + second);
					first = second;
					second = temp;

			}
			return sum;
	}

}

library Problem02_Library
{
	function main(string[] memory args) public
	{
			for(uint256 iterator_var = uint256(0); iterator_var < testNumbers.length; iterator_var++;)
			{
					int32[] ints = [int32(estNumbers[uint256(iterator_var))];
			}
	}

	function solution1(int32 n) private returns(int32)
	{
			int32 sum = int32(0);
			int32 first = int32(1);
			int32 second = int32(2);
			while(second <= n)
			{
					if(second % 2 == 0)
					{
							sum += second;
					}
					int32 temp = int32(first + second);
					first = second;
					second = temp;

			}
			return sum;
	}

}

